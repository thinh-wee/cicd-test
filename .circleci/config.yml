# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1
orbs:
  slack: circleci/slack@3.4.2
executors:
  docker-publisher:
    # environment:
    #   IMAGE_NAME: maithinh95/cicd-test
    docker:
      - image: circleci/golang:1.15
jobs:
  build:
    executor: docker-publisher

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run:
          name: Get dependencies
          command: go mod download
      - run:
          name: Test
          command: go test -v ./...
      - run:
          name: Build
          command: make build
          
      - slack/notify:
          channel: CHANNELID
          color: '#42e2f4'
          mentions: 'USERID1,USERID2,'
          message: This is a custom message notification
          webhook: webhook

      # - setup_remote_docker
      # - run:
      #     name: Build Docker image
      #     command: docker build -t $IMAGE_NAME:latest .
      # - run:
      #     name: Archive Docker image
      #     command: docker save -o image.tar $IMAGE_NAME:latest
      # - persist_to_workspace:
      #     root: .
      #     paths:
      #       - ./image.tar
  # publish-latest:
  #   executor: docker-publisher
  #   steps:
  #     - attach_workspace:
  #         at: /tmp/workspace
      
  #     - setup_remote_docker
  #     - run:
  #         name: Load archived Docker image
  #         command: docker load -i /tmp/workspace/image.tar
  #     - run:
  #         name: LOG DOCKER USERNAME environment
  #         command:
  #           echo "$DOCKERHUB_USERNAME"
  #     - run:
  #         name: LOG DOCKER PASS environment
  #         command:
  #           echo "$DOCKERHUB_PASS"
  #     - run: 
  #         name: Publish Docker Image to Docker Hub
  #         command: |
  #           echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  #           docker push $IMAGE_NAME:latest
workflows:
  version: 2
  build-master:
    jobs:
      - build:
          filters:
            branches:
              only: cd-test
      # - publish-latest:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only: cd-test
      - slack/approval-notification:
          message: Pending approval
          webhook: webhook